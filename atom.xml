<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小大白的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dachengzi.cn/"/>
  <updated>2018-03-31T10:17:54.917Z</updated>
  <id>http://dachengzi.cn/</id>
  
  <author>
    <name>小大白</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个国外的云服务器</title>
    <link href="http://dachengzi.cn/2018/03/31/Vultr%E2%80%94%E2%80%94%E6%8C%89%E6%97%B6%E9%95%BF%E8%AE%A1%E8%B4%B9%E7%9A%84vps/"/>
    <id>http://dachengzi.cn/2018/03/31/Vultr——按时长计费的vps/</id>
    <published>2018-03-31T09:10:37.000Z</published>
    <updated>2018-03-31T10:17:54.917Z</updated>
    
    <content type="html"><![CDATA[<p>vultr<a id="more"></a><br>国外的vps性价比要比国内的高了许多，国内低配的vps每个月大概都在60元人民币左右，而且还限速1M的带宽，实际网速也就在100kb多一点每秒，而国外的云服务器价格相当便宜，最低只要15元人民币每个月，如果是openvz架构的vps更加的低廉，网速对于大多数人来说，自己家带宽可能还远远达不到它限制的那个带宽，虽然由于中国的特殊环境导致网速远远达不到理论速度，但是瘦死的骆驼比马大，总体速度还是比较理想的。<br>另外还有一点是，国内的vps必须要备案才能绑定域名，这对于很多人来说就比较坑了，虽然在一定程度上净化了中国的互联网环境，但是我觉得没啥卵用。国外的服务器并没有啥要求，只要付钱就能用，不需要任何手续，所以很方便。</p><h1 id="vultr服务器"><a href="#vultr服务器" class="headerlink" title="vultr服务器"></a>vultr服务器</h1><p>vultr是一个按时长收费的vps提供商<br>最低是每小时0.004美元，也就是大概3分钱左右<br>国外的服务器ip在国内容易被墙，所以如果ip被墙可以删除这个实例，然后换其他的服务器，当然也可以直接更换ip，但额外的ip是收费的，所以如果没有什么特殊需求，可以直接删除原本的实例，更换另外一个。<br>感觉这种收费模式简直就是为中国客户量身打造的。vultr支持支付宝付款，所以也不用担心付款的问题。另外，付款的时候最好不要挂代理，直接用本地网络付款即可，否则可能被判定为欺诈。</p><h1 id="注册vultr"><a href="#注册vultr" class="headerlink" title="注册vultr"></a>注册vultr</h1><p><a href="https://www.vultr.com/?ref=7311810" target="_blank" rel="noopener">https://www.vultr.com/?ref=7311810</a><br>这是我的分享注册链接，通过此链接注册你我双方都能获得十美元的奖励<br><img src="https://s1.ax1x.com/2018/03/31/9xyHQs.jpg" alt="9xyHQs.jpg"><br><img src="https://s1.ax1x.com/2018/03/31/9xyXwV.jpg" alt="9xyXwV.jpg"></p><h1 id="充值"><a href="#充值" class="headerlink" title="充值"></a>充值</h1><p>可以通过选择Alipay的方式支付<br><img src="https://s1.ax1x.com/2018/03/31/9xyzYF.jpg" alt="9xyzYF.jpg"></p><h1 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h1><p><img src="https://s1.ax1x.com/2018/03/31/9x6SW4.jpg" alt="9x6SW4.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vultr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【转载】CentOSDebianUbuntu系统 TCP-BBR 一键安装脚本</title>
    <link href="http://dachengzi.cn/2018/03/31/CentOSDebianUbuntu%E7%B3%BB%E7%BB%9F%20TCP-BBR%20%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <id>http://dachengzi.cn/2018/03/31/CentOSDebianUbuntu系统 TCP-BBR 一键安装脚本/</id>
    <published>2018-03-31T08:34:25.000Z</published>
    <updated>2018-03-31T09:04:27.422Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2018/03/31/9x0keU.jpg" alt="9x0keU.jpg"><br><a id="more"></a></p><h1 id="本脚本适用环境"><a href="#本脚本适用环境" class="headerlink" title="本脚本适用环境"></a>本脚本适用环境</h1><p>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+</p><p>虚拟技术：OpenVZ 以外的（KVM、Xen、VMware等）</p><p>内存要求：≥128M</p><p>日期　　：2017 年 01 月 13 日</p><h1 id="关于本脚本"><a href="#关于本脚本" class="headerlink" title="关于本脚本"></a>关于本脚本</h1><p>本脚本已在 Vultr 上的 VPS 全部测试通过。<br>当脚本检测到 VPS 的虚拟方式为 OpenVZ 时，会提示错误，并自动退出安装。<br>某些服务商（如 Linode、DigitalOcean）可能需要首先将 VPS 配置为可自定义内核，然后 grub2 的配置才会生效。<br>脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。<br>由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。</p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>使用root用户登录，运行以下命令：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//github.<span class="keyword">com</span>/teddysun/across/raw/master/bbr.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> bbr.<span class="keyword">sh</span> &amp;&amp; bash bbr.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。</p><p>重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：</p><pre><code>uname -r# 查看内核版本，含有 4.9.0 就表示 OK 了# ————————————sysctl net.ipv4.tcp_available_congestion_control# 返回值一般为：# net.ipv4.tcp_available_congestion_control = bbr cubic reno# ————————————sysctl net.ipv4.tcp_congestion_control# 返回值一般为：# net.ipv4.tcp_congestion_control = bbr# ————————————sysctl net.core.default_qdisc# 返回值一般为：# net.core.default_qdisc = fq# ————————————lsmod | grep bbr# 返回值有 tcp_bbr 模块即说明bbr已启动。</code></pre><h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p><a href="https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md" target="_blank" rel="noopener">https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md</a></p><p><a href="http://elrepo.org/tiki/tiki-index.php" target="_blank" rel="noopener">http://elrepo.org/tiki/tiki-index.php</a></p><p><a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9/" target="_blank" rel="noopener">http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9/</a></p><h1 id="更新日志："><a href="#更新日志：" class="headerlink" title="更新日志："></a>更新日志：</h1><p>2017 年 01 月 13 日</p><p>1.更新 内核为 4.9.3。</p><p>2017 年 01 月 09 日</p><p>1.更新 内核为 4.9.1。</p><p>其他BBR一键脚本：『原创』Debian/Ubuntu系统 TCP拥塞控制技术 ——TCP-BBR 一键安装脚本</p><p>本文章转载自：<a href="https://teddysun.com/489.html" target="_blank" rel="noopener">https://teddysun.com/489.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2018/03/31/9x0keU.jpg&quot; alt=&quot;9x0keU.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【转载】ShadowsocksR MudbJSON模式多用户一键脚本 支持流量限制等</title>
    <link href="http://dachengzi.cn/2018/03/19/shadowsocks/"/>
    <id>http://dachengzi.cn/2018/03/19/shadowsocks/</id>
    <published>2018-03-19T03:12:14.000Z</published>
    <updated>2018-03-19T04:21:08.423Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://doub.io/ss-jc60/" target="_blank" rel="noopener">逗比根据地 » 『原创』ShadowsocksR MudbJSON模式多用户一键脚本 支持流量限制等</a></p>  <a id="more"></a><p><img src="https://s1.ax1x.com/2018/03/19/9ofANn.jpg" alt="9ofANn.jpg"></p><h1 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h1><p>CentOS 6+ / Debian 6+ / Ubuntu 14.04 +</p><p>推荐 Debian 7 x64，这个是我一直使用的系统，我的脚本在这个系统上面出错率最低。并且最容易安装锐速（锐速不支持OpenVZ）</p><p>CentOS 7 自带防火墙问题(firewalld)自行解决，其他版本没有做测试。</p><h1 id="脚本特点："><a href="#脚本特点：" class="headerlink" title="脚本特点："></a>脚本特点：</h1><p>所有步骤都可以通过 Shell 脚本中文交互 操作。</p><pre><code>支持 限制 用户速度支持 限制 用户设备数支持 限制 用户总流量支持 定时 流量清零支持 显示 当前连接IP支持 显示 SS/SSR连接+二维码支持 自定义账号IP或域名支持 监控SSR服务端运行状态支持 一键安装 BBR支持 一键安装 锐速支持 一键安装 LotServer支持 一键封禁 垃圾邮件(SMAP)/BT/PT</code></pre><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><p>简单的来说，如果你什么都不懂，那么你直接一路回车就可以了！</p><p>本脚本需要Linux root账户权限才能正常安装运行，所以如果不是 root账号，请先切换为root，如果是 root账号，那么请跳过！</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">su</span></span><br></pre></td></tr></table></figure><p>输入上面代码回车后会提示你输入当前用户的密码，输入并回车后，没有报错就继续下面的步骤安装ShadowsocksR。</p><p>注意：如果你安装的有我的另一个 ssr.sh 脚本，请先卸载ShadowsocksR服务端，再安装这个脚本（不能共存）！</p><p>   ‘wget -N –no-check-certificate <a href="https://softs.fun/Bash/ssrmu.sh" target="_blank" rel="noopener">https://softs.fun/Bash/ssrmu.sh</a> &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh’</p><p>备用下载地址（上面的链接无法下载，就用这个）：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="type">N</span> --no-check-certificate https:<span class="comment">//raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</span></span><br></pre></td></tr></table></figure><p>下载运行后会提示你输入数字来选择要做什么。</p><p>输入 1 ，就会开始安装ShadowsocksR服务端，并且会提示你输入Shadowsocks的 端口/密码/加密方式/ 协议/混淆（混淆和协议是通过输入数字选择的） 等参数来添加第一个用户。</p><p>==注意：用户名不支持中文，如果输入中文会一直保存下去！==</p><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>运行脚本，</p><pre><code>bash ssrmu.sh# 还有一个 运行参数，是用于所有用户流量清零的bash ssrmu.sh clearall# 不过不需要管这个，可以通过脚本自动化的设置 crontab 定时运行脚本</code></pre><p>输入对应的数字来执行相应的命令。</p><pre><code>  ShadowsocksR MuJSON一键管理脚本 [vX.X.X]  ---- Toyo | doub.io/ss-jc60 ----  1. 安装 ShadowsocksR  2. 更新 ShadowsocksR  3. 卸载 ShadowsocksR  4. 安装 libsodium(chacha20)————————————  5. 查看 账号信息  6. 显示 连接信息  7. 设置 用户配置  8. 手动 修改配置  9. 清零 已用流量———————————— 10. 启动 ShadowsocksR 11. 停止 ShadowsocksR 12. 重启 ShadowsocksR 13. 查看 ShadowsocksR 日志———————————— 14. 其他功能 15. 升级脚本 当前状态: 已安装 并 已启动请输入数字 [1-15]：</code></pre><p>==注意：添加/删除/修改 用户配置后，无需重启ShadowsocksR服务端，ShadowsocksR服务端会定时读取数据库文件内的信息，不过修改 用户配置后，可能要等个十几秒才能应用最新的配置（因为ShadowsocksR不是实时读取数据库的，所以有间隔时间==</p><h1 id="文件位置"><a href="#文件位置" class="headerlink" title="文件位置"></a>文件位置</h1><p>安装目录：/usr/local/shadowsocksr</p><p>配置文件：/usr/local/shadowsocksr/user-config.json</p><p>数据文件：/usr/local/shadowsocksr/mudb.json</p><h1 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h1><p>ShadowsocksR 安装后，自动设置为 系统服务，所以支持使用服务来启动/停止等操作，同时支持开机启动。</p><pre><code>启动 ShadowsocksR：/etc/init.d/ssrmu start停止 ShadowsocksR：/etc/init.d/ssrmu stop重启 ShadowsocksR：/etc/init.d/ssrmu restart查看 ShadowsocksR状态：/etc/init.d/ssrmu status</code></pre><p>ShadowsocksR 默认支持UDP转发，服务端无需任何设置。</p><p>本脚本已经集成了 安装/卸载 锐速(ServerSpeeder)/Lotserver，但是是否支持请查看 Linux支持内核列表 。（锐速、LotServer不支持OpenVZ）</p><p>注意：本脚本中的 显示链接信息中的 获取IP归属地功能使用的是 IPIP.NET 的免费API接口，因为限速所以每秒只能检测一次，同时 IPIP.NET 的免费API接口并不会保证稳定性，可能什么时候就突然暂时失效了，这是本人不可控的，有条件可以自建API接口。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://doub.io/ss-jc60/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;逗比根据地 » 『原创』ShadowsocksR MudbJSON模式多用户一键脚本 支持流量限制等&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在Windows系统下部署owncloud个人网盘</title>
    <link href="http://dachengzi.cn/2018/03/15/%E5%9C%A8Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B%E9%83%A8%E7%BD%B2owncloud%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    <id>http://dachengzi.cn/2018/03/15/在Windows系统下部署owncloud个人网盘/</id>
    <published>2018-03-15T13:43:32.000Z</published>
    <updated>2018-03-18T12:43:41.529Z</updated>
    
    <content type="html"><![CDATA[<p>owncloud是一个php的网盘程序，免费且功能强大<br><a id="more"></a><br><a href="https://imgchr.com/i/9oJ3HH" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/03/18/9oJ3HH.jpg" alt="9oJ3HH.jpg"></a><br>最新的owncloud的程序已经不支持Windows系统下部署了，所以要想在Windows系统下部署owncloud可以采用以下两种方式：<br>一、安装老版本的owncloud程序<br>二、通过虚拟机安装Linux操作系统然后部署owncloud<br>在这里我使用的是第一种方式，安装8.0版本的owncloud的程序，源程序可以在owncloud官网下载</p><p>首先，给Windows系统部署php的环境，在这里使用的是wamp，软件可在官网下载<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/ajEL6H1mhg.jpg?imageslim" alt="mark"><br>接着，解压owncloud压缩包文件到wamp根目录的www文件夹下<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/1emkh7FLd8.jpg?imageslim" alt="mark"><br>最后，打开浏览器输入本地地址127.0.0.1进行相应的设置<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/Ga5975fJfB.jpg?imageslim" alt="mark"><br>完成安装<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/ALIhhBhDH7.jpg?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;owncloud是一个php的网盘程序，免费且功能强大&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>win7系统下以管理员方式运行所有程序</title>
    <link href="http://dachengzi.cn/2018/03/15/win7%E7%B3%BB%E7%BB%9F%E4%B8%8B%E4%BB%A5%E7%AE%A1%E7%90%86%E5%91%98%E6%96%B9%E5%BC%8F%E8%BF%90%E8%A1%8C%E6%89%80%E6%9C%89%E7%A8%8B%E5%BA%8F/"/>
    <id>http://dachengzi.cn/2018/03/15/win7系统下以管理员方式运行所有程序/</id>
    <published>2018-03-15T13:11:29.000Z</published>
    <updated>2018-03-18T12:43:45.011Z</updated>
    
    <content type="html"><![CDATA[<p>有些程序需要用管理员方式才能正常运行，然而每次都右键然后点以管理员方式运行很麻烦，所以需要对系统进行设置，让软件默认自动以管理员方式运行</p><a id="more"></a><p><img src="https://s1.ax1x.com/2018/03/18/9oJU8P.jpg" alt="9oJU8P.jpg"><br>首先，右键计算机图标打开计算机管理界面<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/amE3gh2hF9.jpg?imageslim" alt="mark"><br>然后打开系统工具—本地用户和组—用户<br>在这里我另外创建了一个名称为Dimon的用户，如果你默认就是Administrator的账号这步可以直接跳过，如果不是右键你的账号，打开属性—隶属于—添加—输入administrators<br>点确定<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/b6JBhJbAFL.jpg?imageslim" alt="mark"><br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/agcI3BI29E.jpg?imageslim" alt="mark"><br>接着返回桌面，右键需要以管理员方式运行的程序快捷方式，打开属性—快捷方式—高级<br>勾选以用管理员身份运行<br><img src="http://p3esrzn2g.bkt.clouddn.com/dcz6365/180315/geIfmm11ll.jpg?imageslim" alt="mark"><br>确定后退出即可每次默认用管理员身份运行程序</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有些程序需要用管理员方式才能正常运行，然而每次都右键然后点以管理员方式运行很麻烦，所以需要对系统进行设置，让软件默认自动以管理员方式运行&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决80端口占用问题</title>
    <link href="http://dachengzi.cn/2018/03/06/%E8%A7%A3%E5%86%B380%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://dachengzi.cn/2018/03/06/解决80端口占用问题/</id>
    <published>2018-03-06T13:01:57.000Z</published>
    <updated>2018-03-06T13:11:47.787Z</updated>
    
    <content type="html"><![CDATA[<p>win7 win10下80端口被System进程占用的解决方法 </p><a id="more"></a><p>该内容转自—-</p><blockquote><p>CSDN<br><a href="http://blog.csdn.net/whatday/article/details/50610775" target="_blank" rel="noopener">http://blog.csdn.net/whatday/article/details/50610775</a></p></blockquote><p>用如下方法可以解决System进程占用80端口的问题：<br>打开RegEdit:开始-运行-输入regedit-调出注册表<br>找到HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\HTTP<br>找到一个DWORD值Start，将其改为0<br>重启电脑，System进程将不会占用80端口<br>就可以打开你的apache了</p><p>这种方法确实暂时解决了我的问题，应该就是这样的，但是后面又来问题了。Apache又无缘无故的打不开了。于是，最后终于发现了进程有个SQL Server ReportingServices，这个是sql servers带有的，而且自动运行，关闭它，就可以了。但是切记，可能这个进程会自动打开，所以先把apache打开，这个的话后面SQL Server ReportingServices运行也不会占用80端口了。我用的360查找的<br>我的问题总算是解决了。最后总结一下吧。</p><p>查询：查看占用80端口的信息，那么可以在cmd窗口输入netstat -ano | findstr “80” 命令<br>常见的几种情况：<br>1、迅雷等程序或者一些其他有上传功能的软件都会占用电脑的80端口<br>2、netstat -abno后查看，经过查找为pid=4的system进程，因为是系统进程，也无法结束它，经查SQL Server ReportingServices (SQLEXPRESS) 服务占用80端口，停止SQL Server ReportingServices后APache正常启动.<br>3、卸载internet信息服务–&gt;万维网服务。这个是最常见的故障，或者其他一些第三方的服务器软件，必须在进程里面结束，才有效果。<br>备注：杀掉进程的命令：taskkill /pid 4 /f其中 /f表示强制关闭该进程 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;win7 win10下80端口被System进程占用的解决方法 &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitHub博客个人域名使用htpps协议</title>
    <link href="http://dachengzi.cn/2018/01/31/GitHub%E5%8D%9A%E5%AE%A2%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E4%BD%BF%E7%94%A8htpps%E5%8D%8F%E8%AE%AE/"/>
    <id>http://dachengzi.cn/2018/01/31/GitHub博客个人域名使用htpps协议/</id>
    <published>2018-01-31T07:13:54.000Z</published>
    <updated>2018-03-19T04:32:15.905Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>GitHub的个人页面实际上可以直接在设置中开启https，但是如果你设置了自己的域名而不是使用username.github.io这样的域名，就不能使用GitHub提供的HTTPS的协议。<br>因此，想要开启https就需要通过另一种方式来实现，本文介绍的是通过CDN来实现个人博客页面使用https <a id="more"></a><br>其基本原理为：<br>                    域名到cdn服务器使用https协议，CDN服务器到GitHub空间为http协议<br>通过这种反向代理的方式来实现https服务</p><blockquote><p>百度百科</p><h1 id="http和https的区别"><a href="#http和https的区别" class="headerlink" title="http和https的区别"></a>http和https的区别</h1><p>超文本传输协议HTTP协议被用于在Web浏览器和网站服务器之间传递信息。HTTP协议以明文方式发送内容，不提供任何方式的数据加密，如果攻击者截取了Web浏览器和网站服务器之间的传输报文，就可以直接读懂其中的信息，因此HTTP协议不适合传输一些敏感信息，比如信用卡号、密码等。<br>为了解决HTTP协议的这一缺陷，需要使用另一种协议：安全套接字层超文本传输协议HTTPS。为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。<br>HTTPS和HTTP的区别主要为以下四点：<br>一、https协议需要到ca申请证书，一般免费证书很少，需要交费。<br>二、http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。<br>三、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。<br>四、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p></blockquote><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>首先你的有自己的GitHub空间，并绑定自己的域名<br>接着到<a href="https://www.cloudflare.com" target="_blank" rel="noopener">cloudflare</a>注册并登陆cloudflare<br><img src="https://s1.ax1x.com/2018/03/18/9oJgCq.jpg" alt="9oJgCq.jpg"></p><p>页面一开始就会让你填你的域名，按照提示填入域名，然后进入下一步<br><img src="https://s1.ax1x.com/2018/03/19/9ofdDe.jpg" alt="9ofdDe.jpg"></p><p>这一步它会自动扫描你域名的解析记录，等待扫描完，点继续<br><img src="https://s1.ax1x.com/2018/03/19/9ofBEd.jpg" alt="9ofBEd.jpg"></p><p>这一步设置两条CNAME记录指向你的GitHub空间<br><img src="https://s1.ax1x.com/2018/03/19/9ofr4I.jpg" alt="9ofr4I.jpg"></p><p>这一步需要将你域名原来的dns地址更换成它给你的两条dns服务器地址<br><img src="https://s1.ax1x.com/2018/03/19/9of68P.jpg" alt="9of68P.jpg"></p><p>之后进入主页面点击蓝色小锁标志进入Crypto设置页面</p><p><img src="https://s1.ax1x.com/2018/03/19/9ofcgf.jpg" alt="9ofcgf.jpg"></p><p>在SSL页面的最右边的方框中选择flexible<br><img src="https://s1.ax1x.com/2018/03/19/9ofgv8.jpg" alt="9ofgv8.jpg"></p><p>并打开这个按钮<br><img src="https://s1.ax1x.com/2018/03/19/9ofWDg.jpg" alt="9ofWDg.jpg"></p><p>在一段时间内你可能打不开你的页面，耐心等待即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;GitHub的个人页面实际上可以直接在设置中开启https，但是如果你设置了自己的域名而不是使用username.github.io这样的域名，就不能使用GitHub提供的HTTPS的协议。&lt;br&gt;因此，想要开启https就需要通过另一种方式来实现，本文介绍的是通过CDN来实现个人博客页面使用https
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>让文章仅显示摘要部分</title>
    <link href="http://dachengzi.cn/2018/01/29/%E8%AE%A9%E6%96%87%E7%AB%A0%E4%BB%85%E6%98%BE%E7%A4%BA%E6%91%98%E8%A6%81%E9%83%A8%E5%88%86/"/>
    <id>http://dachengzi.cn/2018/01/29/让文章仅显示摘要部分/</id>
    <published>2018-01-29T07:57:43.000Z</published>
    <updated>2018-01-31T06:28:11.617Z</updated>
    
    <content type="html"><![CDATA[<p>博客首页文章默认是显示所有内容，而不是截取摘要缩略显示，百度到的解决方法是在文章中间添加<a id="more"></a>代码，从而能让这个代码上面的内容显示，下面的则折叠起来，并显示 继续阅读全文 的按钮，点击按钮后，页面就会自动跳转到该文章页面。</p><h1 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h1 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h1><p>正文内容<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more&gt;</span><br></pre></td></tr></table></figure></p><p>正文内容</p><h1 id="继续阅读全文改为阅读全文"><a href="#继续阅读全文改为阅读全文" class="headerlink" title="继续阅读全文改为阅读全文"></a>继续阅读全文改为阅读全文</h1><p>但是问题来了，它跳转页面后自动定位到代码以下的内容，想看上面从头开始看需要手动翻阅，感觉有点麻烦，百度了好长时间也没有找到方法来解决这个问题。所以只好自己慢慢探索，通过查看主页的源代码我找到了问题的答案。自动跳转是因为 “继续阅读全文” 所在的p标签内存在这一个article-more-link的class类名，由此我又开始了探索的过程，最后我在那个p标签里面的a标签看到了#more的字样，我猜想它就是靠这个来定位内容的，删除more这个字样后重新部署了博客，问题果然解决了，点击 继续阅读全文 能够从头开始。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客首页文章默认是显示所有内容，而不是截取摘要缩略显示，百度到的解决方法是在文章中间添加
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于DNF的外网架设（第一部分）</title>
    <link href="http://dachengzi.cn/2018/01/28/%E5%85%B3%E4%BA%8EDNF%E7%9A%84%E5%A4%96%E7%BD%91%E6%9E%B6%E8%AE%BE/"/>
    <id>http://dachengzi.cn/2018/01/28/关于DNF的外网架设/</id>
    <published>2018-01-28T05:50:11.000Z</published>
    <updated>2018-03-21T07:09:41.590Z</updated>
    
    <content type="html"><![CDATA[<p>第一部分：服务端架设<br><a id="more"></a><br><img src="https://s1.ax1x.com/2018/03/18/9oJBDg.jpg" alt="9oJBDg.jpg"><br>需要准备以下条件：<br>                 云服务器（是服务器，不是虚拟主机，且至少1G1H）<br>                 预装centos5.8或5.11系统（5系列启动速度快，但yum源缺少，下面会提到）<br>                 需要软件Xshell 5、WinSCP、navicat<br>                 DNF服务端</p><h1 id="买服务器"><a href="#买服务器" class="headerlink" title="买服务器"></a>买服务器</h1><pre><code>推荐使用阿里云，腾讯云==注意：服务器很多端口默认关闭，需要在安全组里面打开所有端口==  以下我将采用腾讯云  centos5.8系统  1H2G</code></pre><h1 id="下载软件和服务端"><a href="#下载软件和服务端" class="headerlink" title="下载软件和服务端"></a>下载软件和服务端</h1><pre><code>Xshell 5：百度下载WinSCP：百度下载navicat：百度下载服务端下载地址：链接：https://pan.baidu.com/s/1c3cfCOg 密码：h1uu</code></pre><h1 id="正式安装"><a href="#正式安装" class="headerlink" title="正式安装"></a>正式安装</h1><p>One.上传服务端到服务器端的/root目录下</p><p> <img src="https://s1.ax1x.com/2018/03/21/978MR0.md.jpg" alt="978MR0.md.jpg"></p><p>Two.用Xshell远程连接腾讯云</p><h1 id="关闭防火墙和防火墙自启"><a href="#关闭防火墙和防火墙自启" class="headerlink" title="关闭防火墙和防火墙自启"></a>关闭防火墙和防火墙自启</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure><h1 id="安装支持库"><a href="#安装支持库" class="headerlink" title="安装支持库"></a>安装支持库</h1><p><img src="https://s1.ax1x.com/2018/03/21/978mIs.jpg" alt="978mIs.jpg"><br>                                                                                                   //个别可能没有安装包可供安装，没关系<br>    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install glibc.i386</span><br><span class="line">yum -y install xulrunner.i386               </span><br><span class="line">yum -y install libXtst.i386</span><br><span class="line">yum -y install gcc gcc-c++ make zlib-devel</span><br></pre></td></tr></table></figure></p><h1 id="数据库开机启动"><a href="#数据库开机启动" class="headerlink" title="数据库开机启动"></a>数据库开机启动</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig mysqld on</span><br></pre></td></tr></table></figure><h1 id="解压下载的文件"><a href="#解压下载的文件" class="headerlink" title="解压下载的文件"></a>解压下载的文件</h1><p><img src="https://s1.ax1x.com/2018/03/21/978eaj.jpg" alt="978eaj.jpg"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf ./DNFServer.tar.gz -C /</span><br></pre></td></tr></table></figure></p><h1 id="设置对应权限"><a href="#设置对应权限" class="headerlink" title="设置对应权限"></a>设置对应权限</h1><p>给予home root mysql文件夹777权限<br><img src="https://s1.ax1x.com/2018/03/21/978KGq.jpg" alt="978KGq.jpg"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod -R <span class="number">777</span> /home</span><br><span class="line">chmod -R <span class="number">777</span> /root</span><br><span class="line">chmod -R <span class="number">777</span> /var/lib/mysql</span><br><span class="line">chown -R mysql.mysql /var/lib/mysql/</span><br></pre></td></tr></table></figure></p><h1 id="重启数据库"><a href="#重启数据库" class="headerlink" title="重启数据库"></a>重启数据库</h1><p>==注意：如果重启失败，请重启一下服务器再次尝试==<br><img src="https://s1.ax1x.com/2018/03/21/9788LF.jpg" alt="9788LF.jpg"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure></p><h1 id="编译GeoIP"><a href="#编译GeoIP" class="headerlink" title="编译GeoIP"></a>编译GeoIP</h1><p><img src="https://s1.ax1x.com/2018/03/21/978Eqg.jpg" alt="978Eqg.jpg"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /home/GeoIP<span class="number">-1.4</span><span class="number">.8</span>/</span><br><span class="line">./configure</span><br><span class="line">make clean</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><h1 id="修改对应位置的外网IP"><a href="#修改对应位置的外网IP" class="headerlink" title="修改对应位置的外网IP"></a>修改对应位置的外网IP</h1><p>用Navicat打开数据库d_taiwan的db_connect表，把db_ip字段所有的192.168.200.131改成你的外网IP。<br>连接地址：你服务器的公网ip<br>账号game  密码uu5!^%jg<br><img src="https://s1.ax1x.com/2018/03/21/978ZZQ.md.jpg" alt="978ZZQ.md.jpg"></p><p>#服务端程序里面的用命令改，注意把“你的外网IP”替换成你的外网IP<br><img src="https://s1.ax1x.com/2018/03/21/97J9jf.jpg" alt="97J9jf.jpg"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/dxf/</span><br><span class="line">sed -i <span class="string">"s/192.168.200.131/这个位置填你外网ip/g"</span> `find . -type f -name <span class="string">"*.tbl"</span>`</span><br><span class="line">sed -i <span class="string">"s/192.168.200.131/这个位置填你外网ip/g"</span> `find . -type f -name <span class="string">"*.cfg"</span>`</span><br></pre></td></tr></table></figure></p><h1 id="设置虚拟内存"><a href="#设置虚拟内存" class="headerlink" title="设置虚拟内存"></a>设置虚拟内存</h1><p><img src="https://s1.ax1x.com/2018/03/21/9783sU.jpg" alt="9783sU.jpg"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /var/</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=swapfile bs=<span class="number">1</span>M count=<span class="number">8192</span></span><br><span class="line">mkswap swapfile </span><br><span class="line">swapon swapfile</span><br><span class="line">echo /var/swapfile swap swap defaults <span class="number">0</span> <span class="number">0</span>  &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure></p><p>服务端架设到此结束</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一部分：服务端架设&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
